{"version":3,"file":"rut-chileno.js","sources":["ng://rut-chileno/lib/rut.service.ts","ng://rut-chileno/lib/rut.component.ts","ng://rut-chileno/lib/rut.module.ts","ng://rut-chileno/public-api.ts","ng://rut-chileno/rut-chileno.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RutService {\n\n  constructor() { }\n\n  rutFormat(value: string): string {\n    const rut: string = this.rutClean(value);\n    if (rut.length <= 1) {\n      return;\n    }\n\n    let result = `${rut.slice(-4, -1)}-${rut.substr(rut.length - 1)}`;\n    for (let i = 4; i < rut.length; i += 3) {\n      result = `${rut.slice(-3 - i, -i)}.${result}`;\n    }\n\n    return result;\n  }\n\n  rutClean(value: string): string {\n    return typeof value === 'string' ? value.replace(/[^0-9kK]+/g, '').toUpperCase() : '';\n  }\n  \n  validaRUT(rut: string): boolean {\n    let valor: string = rut;\n    valor = this.rutClean(valor);\n  \n    // Aislar Cuerpo y Dígito Verificador\n    const cuerpo = valor.slice(0, -1);\n    let dv = valor.slice(-1).toUpperCase();\n  \n    // Si no cumple con el mínimo ej. (n.nnn.nnn)\n    if (cuerpo.length < 7 && cuerpo.length >= 0) {\n      return true;\n    }\n  \n    // Calcular Dígito Verificador\n    let suma = 0;\n    let multiplo = 2;\n  \n    // Para cada dígito del Cuerpo\n    for (let i = 1; i <= cuerpo.length; i++) {\n      // Obtener su Producto con el Múltiplo Correspondiente\n      const index = multiplo * Number(valor.charAt(cuerpo.length - i));\n  \n      // Sumar al Contador General\n      suma = suma + index;\n  \n      // Consolidar Múltiplo dentro del rango [2,7]\n      if (multiplo < 7) {\n        multiplo = multiplo + 1;\n      } else {\n        multiplo = 2;\n      }\n    }\n  \n    // Calcular Dígito Verificador en base al Módulo 11\n    const dvEsperado = 11 - (suma % 11);\n  \n    // Casos Especiales (0 y K)\n    dv = dv === 'K' ? '10' : dv;\n    dv = dv === '0' ? '11' : dv;\n  \n    // Validar que el Cuerpo coincide con su Dígito Verificador\n    if (dvEsperado.toString() !== dv && cuerpo.length >= 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  getRutChile(mode: number ,rut: string): string | boolean {\n\n    if(!this.validaRUT(rut)) {\n      switch (mode) {\n        // el rut limpio 184215551\n        case 0:\n          return this.rutClean(rut);\n        // solo el cuerpo del rut  18421555\n        case 1:\n          let valor: string = rut;\n          valor = this.rutClean(valor);\n          let cuerpo = valor.slice(0, -1);\n          return cuerpo;\n        // rut formateado 18.421.555-1\n        case 2:\n          return this.rutFormat(rut);\n        // rut cuerpo - digitov : 18421555-1  \n        case 3:\n            let r: string = rut;\n            r = this.rutClean(r);\n            const c = r.slice(0, -1);\n            let dv = r.slice(-1).toUpperCase();\n            return c + '-'+ dv;\n        case 4:\n          let ru: string = rut;\n          ru = this.rutClean(ru);\n          let div = ru.slice(-1).toUpperCase();\n          return div; \n      }\n    } else {\n      return false;\n    }\n      \n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'rut-chile',\n  template: `\n  <input type=\"text\"\n  [(ngModel)] = \"rut_chileno\"\n  (focus)=\"rutFormat($event.target.value)\"\n  (keydown)=\"rutFormat($event.target.value)\"\n  (keyup)=\"rutFormat($event.target.value)\"\n  (keypress)=\"validaRUT($event.target.value)\"\n  (blur)=\"validaRUT($event.target.value)\"\n  class=\"input-rut rut\" name=\"username\" id=\"rut_chileno\" placeholder=\"Rut\">\n  <small class=\"danger-rut\" [hidden]=\"!validacionRut\">\n      {{msjE}}\n  </small>\n  `,\n  styles: [\n  ]\n})\nexport class RutComponent implements OnInit {\n\n  @Output() rut_emiter = new EventEmitter<string | number>();\n  @Input() mode: number;\n  @Input() msjError: string;\n\n  validacionRut!: boolean;\n  rut_chileno!: string;\n  msjE!:string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if(!this.msjError)\n      this.msjE = \"El rut ingresado no es válido.\";\n    else\n      this.msjE = this.msjError;\n  }\n\n  rutFormat(value: string): void {\n    const rut: string = this.rutClean(value);\n    if (rut.length <= 1) {\n      return;\n    }\n\n    let result = `${rut.slice(-4, -1)}-${rut.substr(rut.length - 1)}`;\n    for (let i = 4; i < rut.length; i += 3) {\n      result = `${rut.slice(-3 - i, -i)}.${result}`;\n    }\n    \n    this.rut_chileno = result;\n  }\n\n  rutClean(value: string): string {\n    return typeof value === 'string' ? value.replace(/[^0-9kK]+/g, '').toUpperCase() : '';\n  }\n  \n  validaRUT(rut: string): void {\n    this.validacionRut = this.validaRUT_(rut);\n    this.sendEmiterRut(this.rut_chileno);\n  }\n\n  validaRUT_(rut: string): boolean {\n    let valor: string = rut;\n    valor = this.rutClean(valor);\n  \n    const cuerpo = valor.slice(0, -1);\n    let dv = valor.slice(-1).toUpperCase();\n  \n    if (cuerpo.length < 7 && cuerpo.length >= 0) {\n      return true;\n    }\n  \n    let suma = 0;\n    let multiplo = 2;\n  \n    for (let i = 1; i <= cuerpo.length; i++) {\n      const index = multiplo * Number(valor.charAt(cuerpo.length - i));\n      suma = suma + index;\n      if (multiplo < 7) {\n        multiplo = multiplo + 1;\n      } else {\n        multiplo = 2;\n      }\n    }\n  \n    const dvEsperado = 11 - (suma % 11);\n    dv = dv === 'K' ? '10' : dv;\n    dv = dv === '0' ? '11' : dv;\n  \n    if (dvEsperado.toString() !== dv && cuerpo.length >= 0)\n      return true;\n    else \n      return false;\n  }\n\n  sendEmiterRut(rut: string): void {\n    if(!this.validacionRut) {\n      switch (this.mode) {\n        case 0:\n          this.rut_emiter.emit(this.rutClean(rut));\n          break;\n        case 1:\n          let valor: string = rut;\n          this.rut_emiter.emit(this.rutClean(valor).slice(0, -1));\n          break;\n        case 2:\n          this.rut_emiter.emit(rut);\n          break;\n        case 3:\n            let r: string = rut;\n            this.rut_emiter.emit(this.rutClean(r).slice(0, -1) + '-'+ r.slice(-1).toUpperCase());\n            break;  \n        case 4:\n          let ru: string = rut;\n          this.rut_emiter.emit(this.rutClean(ru).slice(-1).toUpperCase());\n          break;    \n      }\n    }\n      \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RutComponent } from './rut.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RutComponent],\n  imports: [\n    FormsModule\n  ],\n  exports: [RutComponent]\n})\nexport class RutModule { }\n","/*\n * Public API Surface of rut\n */\n\nexport * from './lib/rut.service';\nexport * from './lib/rut.component';\nexport * from './lib/rut.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1"],"mappings":"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"}